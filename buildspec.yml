version: 0.2
phases:
  pre_build:
    commands:
      - echo Loggin in Amazon ECR....
      - aws --version
        # LOGIN DE ECR LO PUEDES OBTNER DE LOS COMANDOS DE ENVIO EN TU ECR
      - aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin xxxx.dkr.ecr.us-west-1.amazonaws.com
      - # LA URI DE TU TU REPOSITORIO DE ECR
      - REPOSITORY_URI=xxxx.dkr.ecr.us-west-1.amazonaws.com/ecr-repo-microservice
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_NUMBER | awk -F":" '{print $2}')
  build:
    commands:
      - chmod +x ./gradlew
      - echo Build started on `date`
      - echo building the Jar file
      - ./gradlew build --scan
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # NOMBRE DE TU CONTENEDOR QUE TIENE TU DEFINICION DE TAREA
      - DOCKER_CONTAINER_NAME=CONTAINER-TASK
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - build/libs/ms-examenes-0.0.1-SNAPSHOT.jar